<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    default-availability="optional" default-timeout="1000">

    <description>
        This checks an unavailable dependency, with defaults specified.
    </description>

    <bean id="ServiceOneListener" class="org.osgi.test.cases.blueprint.components.serviceimport.ServiceOneListener">
        <argument value="ServiceOneListener"/>
        <property name="initialUnbind" value="true"/>
    </bean>


    <!-- single shared instance of the imported service.  The original backing service will not exist, but is optional. -->
    <reference id="ServiceOne" interface="org.osgi.test.cases.blueprint.services.TestServiceOne" component-name="ServiceOneA" filter="(test.service.name=ServiceOneA)">
        <reference-listener bind-method="bind" unbind-method="unbind" ref="ServiceOneListener"/>
    </reference>

    <!-- This gets both a ServiceManager and a reference collection injected -->
   <bean id="UnavailableDependencyChecker" class="org.osgi.test.cases.blueprint.components.serviceimport.UnavailableDependencyChecker" init-method="init">
       <argument value="UnavailableDependencyChecker"/>
       <property name="one" ref="ServiceOne"/>
       <property name="serviceManager">
           <reference interface="org.osgi.test.cases.blueprint.services.ServiceManager" availability="mandatory"/>
       </property>
   </bean>
</blueprint>

