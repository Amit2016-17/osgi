<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0">

    <description>
        This is a reusable config for validating different service registrations.
    </description>


    <!-- this is lazily initialized, but since the reference depends on it, it should still get created -->
    <bean id="dependsleaf1" class="org.osgi.test.cases.blueprint.components.injection.DependentComponent"
        init-method="init" destroy-method="destroy" initialization="lazy">
        <argument value="dependsleaf1"/>
    </bean>

    <bean id="dependsleaf2" class="org.osgi.test.cases.blueprint.components.injection.DependentComponent"
        init-method="init" destroy-method="destroy" initialization="lazy">
        <argument value="dependsleaf2"/>
    </bean>

    <!-- single shared instance of the imported service -->
    <reference id="ServiceOne" interface="org.osgi.test.cases.blueprint.services.TestServiceOne" depends-on="dependsleaf2 dependsleaf1XXXXX">
        <description>Testing descriptions also</description>
    </reference>

   <!-- we import this both as a property and constructor arg -->
   <bean id="ServiceOneConstructor" class="org.osgi.test.cases.blueprint.components.serviceimport.ServiceReferenceChecker">
       <argument value="ServiceOneConstructor"/>
       <argument type="org.osgi.test.cases.blueprint.services.TestServiceOne">
           <ref component-id="ServiceOne"/>
       </argument>
   </bean>

   <bean id="ServiceOneProperty" class="org.osgi.test.cases.blueprint.components.serviceimport.ServiceReferenceChecker">
       <argument value="ServiceOneProperty"/>
       <property name="one" ref="ServiceOne"/>
   </bean>
</blueprint>

