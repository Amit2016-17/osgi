<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0">

    <description>
        This is a checker for basic reference list validation, with a depends-on relationship and lazy
        initialization.
    </description>

    <bean id="ServiceOneListener" class="org.osgi.test.cases.blueprint.components.serviceimport.ServiceOneListener"
        init-method="init" destroy-method="destroy" initialization="lazy">
        <argument value="ServiceOneListener"/>
    </bean>

    <!-- this is lazily initialized, but since the reference depends on it, it should still get created -->
    <bean id="dependsleaf1" class="org.osgi.test.cases.blueprint.components.injection.DependentComponent"
        init-method="init" destroy-method="destroy" initialization="lazy">
        <argument value="dependsleaf1"/>
    </bean>

    <bean id="dependsleaf2" class="org.osgi.test.cases.blueprint.components.injection.DependentComponent"
        init-method="init" destroy-method="destroy" initialization="lazy">
        <argument value="dependsleaf2"/>
    </bean>


    <!-- NB:  this also tests the ability for a collection to be a top-level component -->
    <ref-list id="TestCollection" interface="org.osgi.test.cases.blueprint.services.TestServiceOne"
        availability="optional" depends-on="dependsleaf1 dependsleaf2" initialization="lazy">
        <reference-listener bind-method="bind" unbind-method="unbind" ref="ServiceOneListener"/>
    </ref-list>

    <!-- This gets both a ServiceManager and a reference collection injected -->
   <bean id="ReferenceChecker" class="org.osgi.test.cases.blueprint.components.serviceimport.StaticReferenceList"
       init-method="init" destroy-method="destroy" initialization="lazy">
       <argument value="ReferenceChecker"/>
       <property name="serviceManager">
           <reference interface="org.osgi.test.cases.blueprint.services.ServiceManager"/>
       </property>
       <property name="list" ref="TestCollection" />
   </bean>
</blueprint>

