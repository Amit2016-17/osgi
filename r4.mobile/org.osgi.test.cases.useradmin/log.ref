[begin=testCreateRole]
Created: "foo-user"
Created: "null"
Created: "foo-group"
Created: "java.lang.IllegalArgumentException"
[begin=testCreateRole]

[begin=testRemoveRole]
Removed: "true"
Removed: "false"
[end=testRemoveRole]

[begin=testGetRole]
getRole: "foo1"
getRole: "foo2"
getRole: "foo3"
getRole: "foo4"
getRole: "null"
getRole: "user.anyone"
[end=testGetRole]

[begin=testGetRoles]
Roles: "3 roles: { role1, role2, role3 }"
[end=testGetRoles]

[begin=testGetUser]
getUser: "null"
getUser: "user1"
getUser: "null"
[end=testGetUser]

[begin=testRoleGetType]
Role.USER: "1"
Role.GROUP: "2"
Role.ROLE: "0"
getType: "1"
getType: "2"
[end=testRoleGetType]

[begin=testRoleChangeProperties]
changed property: "testValue"
[end=testRoleChangeProperties]

[begin=testRolePutProperties]
putProperties: "ok"
putProperties: "java.lang.IllegalArgumentException"
putProperties: "ok"
[end=testRolePutProperties]

[begin=testRoleGetName]
getName: "r1"
[end=testRoleGetName]

[begin=testUserChangeCredentials]
getCredentials: "testValue"
[end=testUserChangeCredentials]

[begin=testUserPutCredentials]
putCredentials: "ok"
putCredentials: "java.lang.IllegalArgumentException"
putCredentials: "ok"
[end=testUserPutCredentials]

[begin=testUserHasCredential]
hasCredential: "true"
hasCredential: "false"
hasCredential: "true"
[end=testUserHasCredential]

[begin=testGroupAddMember]
adding member: "true"
adding existing member: "false"
[end=testGroupAddMember]

[begin=testGroupAddRequiredMembers]
adding member: "true"
adding existing member: "false"
[end=testGroupAddRequiredMembers]

[begin=testGroupGetMembers]
getMembers: "No roles"
getMembers: "2 roles: { user1, user2 }"
[end=testGroupGetMembers]

[begin=testGroupGetRequiredMembers]
getRequiredMembers: "No roles"
getRequiredMembers: "2 roles: { user1, user2 }"
[end=testGroupGetRequiredMembers]

[begin=testGroupRemoveMember]
members after remove: "1 roles: { user1 }"
[end=testGroupRemoveMember]

[begin=testUserAnyone]
hasRole foorole: "true"
user.anyone found: "false"
[end=testUserAnyone]

[begin=testBasicRequired]
hasRole testrole: "true"
hasRole testrole: "true"
hasRole testrole: "false"
[end=testBasicRequired]

[begin=testRequiredAuth]
hasRole testrole: "false"
[end=testRequiredAuth]

[begin=testUserAnyoneBasic]
hasRole testrole: "true"
hasRole testrole: "true"
hasRole testrole: "false"
hasRole testrole: "false"
[end=testUserAnyoneBasic]

[begin=testUserAnyoneRequired]
hasRole testrole: "true"
hasRole testrole: "false"
hasRole testrole: "false"
hasRole testrole: "true"
[end=testUserAnyoneRequired]

[begin=testAnonymousUser]
anonymous user: "null"
hasRole anygroup: "false"
hasRole anygroup: "true"
hasRole requiredgroup: "false"
hasRole user.anyone: "true"
[end=testAnonymousUser]

[begin=testGroupInGroup]
hasRole group1: "false"
[end=testGroupInGroup]

[begin=testUserAdminEvents]
waiting: "createRoleEvent"
received event: "ROLE_CREATED for user1"
received event: "ROLE_CHANGED for user1"
received event: "ROLE_REMOVED for user1"
[end=testUserAdminEvents]
