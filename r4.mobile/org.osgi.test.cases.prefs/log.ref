[method name="testSystemRoot"]
[req name="prefs.flush"/]
System root node - flush: "/"
[req name="prefs.sync"/]
System root node - sync: "/"
[req name="prefs.absolutePath"/]
System root node - Absolute path: "/"
[req name="prefs.nodeExists"/]
System root node - nodeExists: "true"
System root node - nodeExists: "true"
[req name="prefs.name"/]
System root node - name: ""
[req name="prefs.unusualnames"/]
System root node - names: "/.././_?/\"
System root node - names: "/ / / / "
System root node - names: "/.././_?/\"
System root node - names: "/ / / / "
[req name="prefs.illegalnames"/]
System root node - names: "java.lang.IllegalArgumentException"
System root node - names: "java.lang.IllegalArgumentException"
System root node - names: "java.lang.IllegalArgumentException"
System root node - names: "java.lang.IllegalArgumentException"
[req name="prefs.casesensitivity"/]
System root node - Case sensitivity in keys: "lowercase"
System root node - Case sensitivity in names: "false"
System root node - clear: "ok"
[req name="prefs.get"/]
System root node - get: "String: (empty)"
[req name="prefs.getBoolean"/]
System root node - getBoolean: "boolean: false"
[req name="prefs.getByteArray"/]
System root node - getByteArray: "byte[]: "
[req name="prefs.getDouble"/]
System root node - getDouble: "doubleToLongBits: 0"
[req name="prefs.getFloat"/]
System root node - getFloat: "floatToIntBits: 0"
[req name="prefs.getInteger"/]
System root node - getInteger: "int: 0"
[req name="prefs.getLong"/]
System root node - getLong: "long: 0"
[req name="prefs.get"/]
System root node - get: "java.lang.NullPointerException"
[req name="prefs.getBoolean"/]
System root node - getBoolean: "java.lang.NullPointerException"
[req name="prefs.getByteArray"/]
System root node - getByteArray: "java.lang.NullPointerException"
[req name="prefs.getDouble"/]
System root node - getDouble: "java.lang.NullPointerException"
[req name="prefs.getFloat"/]
System root node - getFloat: "java.lang.NullPointerException"
[req name="prefs.getInteger"/]
System root node - getInteger: "java.lang.NullPointerException"
[req name="prefs.getLong"/]
System root node - getLong: "java.lang.NullPointerException"
[req name="prefs.get"/]
System root node - get: "String: null"
[req name="prefs.getByteArray"/]
System root node - getByteArray: "byte[]: null"
[req name="prefs.put"/]
System root node - put: "String: (empty)"
[req name="prefs.putBoolean"/]
System root node - putBoolean: "boolean: false"
[req name="prefs.putByteArray"/]
System root node - putByteArray: "byte[]: "
[req name="prefs.putDouble"/]
System root node - putDouble: "doubleToLongBits: 0"
[req name="prefs.putFloat"/]
System root node - putFloat: "floatToIntBits: 0"
[req name="prefs.putInteger"/]
System root node - putInteger: "int: 0"
[req name="prefs.putLong"/]
System root node - putLong: "long: 0"
[req name="prefs.put"/]
System root node - put: "java.lang.NullPointerException"
[req name="prefs.putBoolean"/]
System root node - putBoolean: "java.lang.NullPointerException"
[req name="prefs.putByteArray"/]
System root node - putByteArray: "java.lang.NullPointerException"
[req name="prefs.putDouble"/]
System root node - putDouble: "java.lang.NullPointerException"
[req name="prefs.putFloat"/]
System root node - putFloat: "java.lang.NullPointerException"
[req name="prefs.putInteger"/]
System root node - putInteger: "java.lang.NullPointerException"
[req name="prefs.putLong"/]
System root node - putLong: "java.lang.NullPointerException"
[req name="prefs.put"/]
System root node - put: "java.lang.NullPointerException"
[req name="prefs.putByteArray"/]
System root node - putByteArray: "java.lang.NullPointerException"
System root node - clear: "ok"
[req name="prefs.propvalues"/]
System root node, default - get: "String: (empty)"
System root node, default - getBoolean: "boolean: false"
System root node, default - getByteArray: "byte[]: "
System root node, default - getDouble: "doubleToLongBits: 0"
System root node, default - getFloat: "floatToIntBits: 0"
System root node, default - getInteger: "int: 0"
System root node, default - getLong: "long: 0"
System root node, aString - get: "String: astring"
System root node, aString - getBoolean: "boolean: false"
System root node, aString - getByteArray: "byte[]: "
System root node, aString - getDouble: "doubleToLongBits: 0"
System root node, aString - getFloat: "floatToIntBits: 0"
System root node, aString - getInteger: "int: 0"
System root node, aString - getLong: "long: 0"
System root node, true - get: "String: true"
System root node, true - getBoolean: "boolean: true"
System root node, true - getByteArray: "byte[]: b6bb9e"
System root node, true - getDouble: "doubleToLongBits: 0"
System root node, true - getFloat: "floatToIntBits: 0"
System root node, true - getInteger: "int: 0"
System root node, true - getLong: "long: 0"
System root node, true - get: "String: true"
System root node, true - getBoolean: "boolean: true"
System root node, true - getByteArray: "byte[]: b6bb9e"
System root node, true - getDouble: "doubleToLongBits: 0"
System root node, true - getFloat: "floatToIntBits: 0"
System root node, true - getInteger: "int: 0"
System root node, true - getLong: "long: 0"
System root node, sometext - get: "String: sometext"
System root node, sometext - getBoolean: "boolean: false"
System root node, sometext - getByteArray: "byte[]: b2899eb5ec6d"
System root node, sometext - getDouble: "doubleToLongBits: 0"
System root node, sometext - getFloat: "floatToIntBits: 0"
System root node, sometext - getInteger: "int: 0"
System root node, sometext - getLong: "long: 0"
System root node, 1.0 - get: "String: 1.0"
System root node, 1.0 - getBoolean: "boolean: false"
System root node, 1.0 - getByteArray: "byte[]: "
System root node, 1.0 - getDouble: "doubleToLongBits: 4607182418800017408"
System root node, 1.0 - getFloat: "floatToIntBits: 1065353216"
System root node, 1.0 - getInteger: "int: 0"
System root node, 1.0 - getLong: "long: 0"
System root node, Double.MIN_VALUE - get: "String: 4.9E-324"
System root node, Double.MIN_VALUE - getBoolean: "boolean: false"
System root node, Double.MIN_VALUE - getByteArray: "byte[]: "
System root node, Double.MIN_VALUE - getDouble: "doubleToLongBits: 1"
System root node, Double.MIN_VALUE - getFloat: "floatToIntBits: 0"
System root node, Double.MIN_VALUE - getInteger: "int: 0"
System root node, Double.MIN_VALUE - getLong: "long: 0"
System root node, Float.MIN_VALUE - get: "String: 1.4E-45"
System root node, Float.MIN_VALUE - getBoolean: "boolean: false"
System root node, Float.MIN_VALUE - getByteArray: "byte[]: "
System root node, Float.MIN_VALUE - getDouble: "doubleToLongBits: 3936137728114922858"
System root node, Float.MIN_VALUE - getFloat: "floatToIntBits: 1"
System root node, Float.MIN_VALUE - getInteger: "int: 0"
System root node, Float.MIN_VALUE - getLong: "long: 0"
System root node, 1 - get: "String: 1"
System root node, 1 - getBoolean: "boolean: false"
System root node, 1 - getByteArray: "byte[]: "
System root node, 1 - getDouble: "doubleToLongBits: 4607182418800017408"
System root node, 1 - getFloat: "floatToIntBits: 1065353216"
System root node, 1 - getInteger: "int: 1"
System root node, 1 - getLong: "long: 1"
System root node, Integer.MIN_VALUE - get: "String: -2147483648"
System root node, Integer.MIN_VALUE - getBoolean: "boolean: false"
System root node, Integer.MIN_VALUE - getByteArray: "byte[]: "
System root node, Integer.MIN_VALUE - getDouble: "doubleToLongBits: -4476578029606273024"
System root node, Integer.MIN_VALUE - getFloat: "floatToIntBits: -822083584"
System root node, Integer.MIN_VALUE - getInteger: "int: -2147483648"
System root node, Integer.MIN_VALUE - getLong: "long: -2147483648"
System root node, Long.MIN_VALUE - get: "String: -9223372036854775808"
System root node, Long.MIN_VALUE - getBoolean: "boolean: false"
System root node, Long.MIN_VALUE - getByteArray: "byte[]: "
System root node, Long.MIN_VALUE - getDouble: "doubleToLongBits: -4332462841530417152"
System root node, Long.MIN_VALUE - getFloat: "floatToIntBits: -553648128"
System root node, Long.MIN_VALUE - getInteger: "int: 0"
System root node, Long.MIN_VALUE - getLong: "long: -9223372036854775808"
System root node - clear: "ok"
System root node - put: "String: somevalue"
System root node - put: "String: someothervalue"
[req name="prefs.keys"/]
System root node - keys: "{ somekey, someotherkey }"
System root node - Absolute path: "/"
System root node - Children: "{  }"
System root node - get: "String: (empty)"
System root node - getBoolean: "boolean: false"
System root node - getByteArray: "byte[]: "
System root node - getDouble: "doubleToLongBits: 0"
System root node - getFloat: "floatToIntBits: 0"
System root node - getInteger: "int: 0"
System root node - getLong: "long: 0"
System root node - keys: "{ somekey, someotherkey }"
System root node - name: ""
System root node - nodeExists: "true"
System root node - nodeExists: "true"
System root node - parent: "null"
[req name="prefs.remove"/]
System root node - remove: "somekey == null"
System root node - Absolute path: "/"
System root node - Children: "{  }"
System root node - get: "String: (empty)"
System root node - getBoolean: "boolean: false"
System root node - getByteArray: "byte[]: "
System root node - getDouble: "doubleToLongBits: 0"
System root node - getFloat: "floatToIntBits: 0"
System root node - getInteger: "int: 0"
System root node - getLong: "long: 0"
System root node - keys: "{ someotherkey }"
System root node - name: ""
System root node - nodeExists: "true"
System root node - nodeExists: "true"
System root node - parent: "null"
[req name="prefs.clear"/]
System root node - clear: "ok"
System root node - Absolute path: "/"
System root node - Children: "{  }"
System root node - get: "String: (empty)"
System root node - getBoolean: "boolean: false"
System root node - getByteArray: "byte[]: "
System root node - getDouble: "doubleToLongBits: 0"
System root node - getFloat: "floatToIntBits: 0"
System root node - getInteger: "int: 0"
System root node - getLong: "long: 0"
System root node - keys: "{  }"
System root node - name: ""
System root node - nodeExists: "true"
System root node - nodeExists: "true"
System root node - parent: "null"
[req name="prefs.node"/]
System root node - Creating node: "/child1"
[req name="prefs.node"/]
System root node - Creating node: "/child2"
[req name="prefs.node"/]
System root node - Creating node: "/child3"
[req name="prefs.nodeExists"/]
System root node - nodeExists: "true"
System root node - nodeExists: "true"
[req name="prefs.childrenNames"/]
System root node - Children: "{ child1, child2, child3 }"
System root node - Absolute path: "/"
System root node - Children: "{ child1, child2, child3 }"
System root node - get: "String: (empty)"
System root node - getBoolean: "boolean: false"
System root node - getByteArray: "byte[]: "
System root node - getDouble: "doubleToLongBits: 0"
System root node - getFloat: "floatToIntBits: 0"
System root node - getInteger: "int: 0"
System root node - getLong: "long: 0"
System root node - keys: "{  }"
System root node - name: ""
System root node - nodeExists: "true"
System root node - nodeExists: "true"
System root node - parent: "null"
[req name="prefs.removeNode"/]
System root node - Removing node: "/"
System root node - Absolute path: "/"
System root node - Children: "java.lang.IllegalStateException"
System root node - get: "java.lang.IllegalStateException"
System root node - getBoolean: "java.lang.IllegalStateException"
System root node - getByteArray: "java.lang.IllegalStateException"
System root node - getDouble: "java.lang.IllegalStateException"
System root node - getFloat: "java.lang.IllegalStateException"
System root node - getInteger: "java.lang.IllegalStateException"
System root node - getLong: "java.lang.IllegalStateException"
System root node - keys: "java.lang.IllegalStateException"
System root node - name: ""
System root node - nodeExists: "false"
System root node - nodeExists: "java.lang.IllegalStateException"
System root node - parent: "java.lang.IllegalStateException"
[/method>

[method name="testSystemNode"]
[req name="prefs.flush"/]
System node - flush: "/somenode/anothernode"
[req name="prefs.sync"/]
System node - sync: "/somenode/anothernode"
[req name="prefs.absolutePath"/]
System node - Absolute path: "/somenode/anothernode"
[req name="prefs.nodeExists"/]
System node - nodeExists: "true"
System node - nodeExists: "true"
[req name="prefs.name"/]
System node - name: "anothernode"
[req name="prefs.unusualnames"/]
System node - names: "/.././_?/\"
System node - names: "/ / / / "
System node - names: "/somenode/anothernode/.././_?/\"
System node - names: "/somenode/anothernode/ / / / "
[req name="prefs.illegalnames"/]
System node - names: "java.lang.IllegalArgumentException"
System node - names: "java.lang.IllegalArgumentException"
System node - names: "java.lang.IllegalArgumentException"
System node - names: "java.lang.IllegalArgumentException"
[req name="prefs.casesensitivity"/]
System node - Case sensitivity in keys: "lowercase"
System node - Case sensitivity in names: "false"
System node - clear: "ok"
[req name="prefs.get"/]
System node - get: "String: (empty)"
[req name="prefs.getBoolean"/]
System node - getBoolean: "boolean: false"
[req name="prefs.getByteArray"/]
System node - getByteArray: "byte[]: "
[req name="prefs.getDouble"/]
System node - getDouble: "doubleToLongBits: 0"
[req name="prefs.getFloat"/]
System node - getFloat: "floatToIntBits: 0"
[req name="prefs.getInteger"/]
System node - getInteger: "int: 0"
[req name="prefs.getLong"/]
System node - getLong: "long: 0"
[req name="prefs.get"/]
System node - get: "java.lang.NullPointerException"
[req name="prefs.getBoolean"/]
System node - getBoolean: "java.lang.NullPointerException"
[req name="prefs.getByteArray"/]
System node - getByteArray: "java.lang.NullPointerException"
[req name="prefs.getDouble"/]
System node - getDouble: "java.lang.NullPointerException"
[req name="prefs.getFloat"/]
System node - getFloat: "java.lang.NullPointerException"
[req name="prefs.getInteger"/]
System node - getInteger: "java.lang.NullPointerException"
[req name="prefs.getLong"/]
System node - getLong: "java.lang.NullPointerException"
[req name="prefs.get"/]
System node - get: "String: null"
[req name="prefs.getByteArray"/]
System node - getByteArray: "byte[]: null"
[req name="prefs.put"/]
System node - put: "String: (empty)"
[req name="prefs.putBoolean"/]
System node - putBoolean: "boolean: false"
[req name="prefs.putByteArray"/]
System node - putByteArray: "byte[]: "
[req name="prefs.putDouble"/]
System node - putDouble: "doubleToLongBits: 0"
[req name="prefs.putFloat"/]
System node - putFloat: "floatToIntBits: 0"
[req name="prefs.putInteger"/]
System node - putInteger: "int: 0"
[req name="prefs.putLong"/]
System node - putLong: "long: 0"
[req name="prefs.put"/]
System node - put: "java.lang.NullPointerException"
[req name="prefs.putBoolean"/]
System node - putBoolean: "java.lang.NullPointerException"
[req name="prefs.putByteArray"/]
System node - putByteArray: "java.lang.NullPointerException"
[req name="prefs.putDouble"/]
System node - putDouble: "java.lang.NullPointerException"
[req name="prefs.putFloat"/]
System node - putFloat: "java.lang.NullPointerException"
[req name="prefs.putInteger"/]
System node - putInteger: "java.lang.NullPointerException"
[req name="prefs.putLong"/]
System node - putLong: "java.lang.NullPointerException"
[req name="prefs.put"/]
System node - put: "java.lang.NullPointerException"
[req name="prefs.putByteArray"/]
System node - putByteArray: "java.lang.NullPointerException"
System node - clear: "ok"
[req name="prefs.propvalues"/]
System node, default - get: "String: (empty)"
System node, default - getBoolean: "boolean: false"
System node, default - getByteArray: "byte[]: "
System node, default - getDouble: "doubleToLongBits: 0"
System node, default - getFloat: "floatToIntBits: 0"
System node, default - getInteger: "int: 0"
System node, default - getLong: "long: 0"
System node, aString - get: "String: astring"
System node, aString - getBoolean: "boolean: false"
System node, aString - getByteArray: "byte[]: "
System node, aString - getDouble: "doubleToLongBits: 0"
System node, aString - getFloat: "floatToIntBits: 0"
System node, aString - getInteger: "int: 0"
System node, aString - getLong: "long: 0"
System node, true - get: "String: true"
System node, true - getBoolean: "boolean: true"
System node, true - getByteArray: "byte[]: b6bb9e"
System node, true - getDouble: "doubleToLongBits: 0"
System node, true - getFloat: "floatToIntBits: 0"
System node, true - getInteger: "int: 0"
System node, true - getLong: "long: 0"
System node, true - get: "String: true"
System node, true - getBoolean: "boolean: true"
System node, true - getByteArray: "byte[]: b6bb9e"
System node, true - getDouble: "doubleToLongBits: 0"
System node, true - getFloat: "floatToIntBits: 0"
System node, true - getInteger: "int: 0"
System node, true - getLong: "long: 0"
System node, sometext - get: "String: sometext"
System node, sometext - getBoolean: "boolean: false"
System node, sometext - getByteArray: "byte[]: b2899eb5ec6d"
System node, sometext - getDouble: "doubleToLongBits: 0"
System node, sometext - getFloat: "floatToIntBits: 0"
System node, sometext - getInteger: "int: 0"
System node, sometext - getLong: "long: 0"
System node, 1.0 - get: "String: 1.0"
System node, 1.0 - getBoolean: "boolean: false"
System node, 1.0 - getByteArray: "byte[]: "
System node, 1.0 - getDouble: "doubleToLongBits: 4607182418800017408"
System node, 1.0 - getFloat: "floatToIntBits: 1065353216"
System node, 1.0 - getInteger: "int: 0"
System node, 1.0 - getLong: "long: 0"
System node, Double.MIN_VALUE - get: "String: 4.9E-324"
System node, Double.MIN_VALUE - getBoolean: "boolean: false"
System node, Double.MIN_VALUE - getByteArray: "byte[]: "
System node, Double.MIN_VALUE - getDouble: "doubleToLongBits: 1"
System node, Double.MIN_VALUE - getFloat: "floatToIntBits: 0"
System node, Double.MIN_VALUE - getInteger: "int: 0"
System node, Double.MIN_VALUE - getLong: "long: 0"
System node, Float.MIN_VALUE - get: "String: 1.4E-45"
System node, Float.MIN_VALUE - getBoolean: "boolean: false"
System node, Float.MIN_VALUE - getByteArray: "byte[]: "
System node, Float.MIN_VALUE - getDouble: "doubleToLongBits: 3936137728114922858"
System node, Float.MIN_VALUE - getFloat: "floatToIntBits: 1"
System node, Float.MIN_VALUE - getInteger: "int: 0"
System node, Float.MIN_VALUE - getLong: "long: 0"
System node, 1 - get: "String: 1"
System node, 1 - getBoolean: "boolean: false"
System node, 1 - getByteArray: "byte[]: "
System node, 1 - getDouble: "doubleToLongBits: 4607182418800017408"
System node, 1 - getFloat: "floatToIntBits: 1065353216"
System node, 1 - getInteger: "int: 1"
System node, 1 - getLong: "long: 1"
System node, Integer.MIN_VALUE - get: "String: -2147483648"
System node, Integer.MIN_VALUE - getBoolean: "boolean: false"
System node, Integer.MIN_VALUE - getByteArray: "byte[]: "
System node, Integer.MIN_VALUE - getDouble: "doubleToLongBits: -4476578029606273024"
System node, Integer.MIN_VALUE - getFloat: "floatToIntBits: -822083584"
System node, Integer.MIN_VALUE - getInteger: "int: -2147483648"
System node, Integer.MIN_VALUE - getLong: "long: -2147483648"
System node, Long.MIN_VALUE - get: "String: -9223372036854775808"
System node, Long.MIN_VALUE - getBoolean: "boolean: false"
System node, Long.MIN_VALUE - getByteArray: "byte[]: "
System node, Long.MIN_VALUE - getDouble: "doubleToLongBits: -4332462841530417152"
System node, Long.MIN_VALUE - getFloat: "floatToIntBits: -553648128"
System node, Long.MIN_VALUE - getInteger: "int: 0"
System node, Long.MIN_VALUE - getLong: "long: -9223372036854775808"
System node - clear: "ok"
System node - put: "String: somevalue"
System node - put: "String: someothervalue"
[req name="prefs.keys"/]
System node - keys: "{ somekey, someotherkey }"
System node - Absolute path: "/somenode/anothernode"
System node - Children: "{  }"
System node - get: "String: (empty)"
System node - getBoolean: "boolean: false"
System node - getByteArray: "byte[]: "
System node - getDouble: "doubleToLongBits: 0"
System node - getFloat: "floatToIntBits: 0"
System node - getInteger: "int: 0"
System node - getLong: "long: 0"
System node - keys: "{ somekey, someotherkey }"
System node - name: "anothernode"
System node - nodeExists: "true"
System node - nodeExists: "true"
System node - parent: "somenode"
[req name="prefs.remove"/]
System node - remove: "somekey == null"
System node - Absolute path: "/somenode/anothernode"
System node - Children: "{  }"
System node - get: "String: (empty)"
System node - getBoolean: "boolean: false"
System node - getByteArray: "byte[]: "
System node - getDouble: "doubleToLongBits: 0"
System node - getFloat: "floatToIntBits: 0"
System node - getInteger: "int: 0"
System node - getLong: "long: 0"
System node - keys: "{ someotherkey }"
System node - name: "anothernode"
System node - nodeExists: "true"
System node - nodeExists: "true"
System node - parent: "somenode"
[req name="prefs.clear"/]
System node - clear: "ok"
System node - Absolute path: "/somenode/anothernode"
System node - Children: "{  }"
System node - get: "String: (empty)"
System node - getBoolean: "boolean: false"
System node - getByteArray: "byte[]: "
System node - getDouble: "doubleToLongBits: 0"
System node - getFloat: "floatToIntBits: 0"
System node - getInteger: "int: 0"
System node - getLong: "long: 0"
System node - keys: "{  }"
System node - name: "anothernode"
System node - nodeExists: "true"
System node - nodeExists: "true"
System node - parent: "somenode"
[req name="prefs.node"/]
System node - Creating node: "/somenode/anothernode/child1"
[req name="prefs.node"/]
System node - Creating node: "/somenode/anothernode/child2"
[req name="prefs.node"/]
System node - Creating node: "/somenode/anothernode/child3"
[req name="prefs.nodeExists"/]
System node - nodeExists: "true"
System node - nodeExists: "true"
[req name="prefs.childrenNames"/]
System node - Children: "{ child1, child2, child3 }"
System node - Absolute path: "/somenode/anothernode"
System node - Children: "{ child1, child2, child3 }"
System node - get: "String: (empty)"
System node - getBoolean: "boolean: false"
System node - getByteArray: "byte[]: "
System node - getDouble: "doubleToLongBits: 0"
System node - getFloat: "floatToIntBits: 0"
System node - getInteger: "int: 0"
System node - getLong: "long: 0"
System node - keys: "{  }"
System node - name: "anothernode"
System node - nodeExists: "true"
System node - nodeExists: "true"
System node - parent: "somenode"
[req name="prefs.removeNode"/]
System node - Removing node: "/somenode/anothernode"
System node - Absolute path: "/somenode/anothernode"
System node - Children: "java.lang.IllegalStateException"
System node - get: "java.lang.IllegalStateException"
System node - getBoolean: "java.lang.IllegalStateException"
System node - getByteArray: "java.lang.IllegalStateException"
System node - getDouble: "java.lang.IllegalStateException"
System node - getFloat: "java.lang.IllegalStateException"
System node - getInteger: "java.lang.IllegalStateException"
System node - getLong: "java.lang.IllegalStateException"
System node - keys: "java.lang.IllegalStateException"
System node - name: "anothernode"
System node - nodeExists: "false"
System node - nodeExists: "java.lang.IllegalStateException"
System node - parent: "java.lang.IllegalStateException"
[/method>

[method name="testUserRoot"]
[req name="prefs.flush"/]
User root node - flush: "/"
[req name="prefs.sync"/]
User root node - sync: "/"
[req name="prefs.absolutePath"/]
User root node - Absolute path: "/"
[req name="prefs.nodeExists"/]
User root node - nodeExists: "true"
User root node - nodeExists: "true"
[req name="prefs.name"/]
User root node - name: ""
[req name="prefs.unusualnames"/]
User root node - names: "/.././_?/\"
User root node - names: "/ / / / "
User root node - names: "/.././_?/\"
User root node - names: "/ / / / "
[req name="prefs.illegalnames"/]
User root node - names: "java.lang.IllegalArgumentException"
User root node - names: "java.lang.IllegalArgumentException"
User root node - names: "java.lang.IllegalArgumentException"
User root node - names: "java.lang.IllegalArgumentException"
[req name="prefs.casesensitivity"/]
User root node - Case sensitivity in keys: "lowercase"
User root node - Case sensitivity in names: "false"
User root node - clear: "ok"
[req name="prefs.get"/]
User root node - get: "String: (empty)"
[req name="prefs.getBoolean"/]
User root node - getBoolean: "boolean: false"
[req name="prefs.getByteArray"/]
User root node - getByteArray: "byte[]: "
[req name="prefs.getDouble"/]
User root node - getDouble: "doubleToLongBits: 0"
[req name="prefs.getFloat"/]
User root node - getFloat: "floatToIntBits: 0"
[req name="prefs.getInteger"/]
User root node - getInteger: "int: 0"
[req name="prefs.getLong"/]
User root node - getLong: "long: 0"
[req name="prefs.get"/]
User root node - get: "java.lang.NullPointerException"
[req name="prefs.getBoolean"/]
User root node - getBoolean: "java.lang.NullPointerException"
[req name="prefs.getByteArray"/]
User root node - getByteArray: "java.lang.NullPointerException"
[req name="prefs.getDouble"/]
User root node - getDouble: "java.lang.NullPointerException"
[req name="prefs.getFloat"/]
User root node - getFloat: "java.lang.NullPointerException"
[req name="prefs.getInteger"/]
User root node - getInteger: "java.lang.NullPointerException"
[req name="prefs.getLong"/]
User root node - getLong: "java.lang.NullPointerException"
[req name="prefs.get"/]
User root node - get: "String: null"
[req name="prefs.getByteArray"/]
User root node - getByteArray: "byte[]: null"
[req name="prefs.put"/]
User root node - put: "String: (empty)"
[req name="prefs.putBoolean"/]
User root node - putBoolean: "boolean: false"
[req name="prefs.putByteArray"/]
User root node - putByteArray: "byte[]: "
[req name="prefs.putDouble"/]
User root node - putDouble: "doubleToLongBits: 0"
[req name="prefs.putFloat"/]
User root node - putFloat: "floatToIntBits: 0"
[req name="prefs.putInteger"/]
User root node - putInteger: "int: 0"
[req name="prefs.putLong"/]
User root node - putLong: "long: 0"
[req name="prefs.put"/]
User root node - put: "java.lang.NullPointerException"
[req name="prefs.putBoolean"/]
User root node - putBoolean: "java.lang.NullPointerException"
[req name="prefs.putByteArray"/]
User root node - putByteArray: "java.lang.NullPointerException"
[req name="prefs.putDouble"/]
User root node - putDouble: "java.lang.NullPointerException"
[req name="prefs.putFloat"/]
User root node - putFloat: "java.lang.NullPointerException"
[req name="prefs.putInteger"/]
User root node - putInteger: "java.lang.NullPointerException"
[req name="prefs.putLong"/]
User root node - putLong: "java.lang.NullPointerException"
[req name="prefs.put"/]
User root node - put: "java.lang.NullPointerException"
[req name="prefs.putByteArray"/]
User root node - putByteArray: "java.lang.NullPointerException"
User root node - clear: "ok"
[req name="prefs.propvalues"/]
User root node, default - get: "String: (empty)"
User root node, default - getBoolean: "boolean: false"
User root node, default - getByteArray: "byte[]: "
User root node, default - getDouble: "doubleToLongBits: 0"
User root node, default - getFloat: "floatToIntBits: 0"
User root node, default - getInteger: "int: 0"
User root node, default - getLong: "long: 0"
User root node, aString - get: "String: astring"
User root node, aString - getBoolean: "boolean: false"
User root node, aString - getByteArray: "byte[]: "
User root node, aString - getDouble: "doubleToLongBits: 0"
User root node, aString - getFloat: "floatToIntBits: 0"
User root node, aString - getInteger: "int: 0"
User root node, aString - getLong: "long: 0"
User root node, true - get: "String: true"
User root node, true - getBoolean: "boolean: true"
User root node, true - getByteArray: "byte[]: b6bb9e"
User root node, true - getDouble: "doubleToLongBits: 0"
User root node, true - getFloat: "floatToIntBits: 0"
User root node, true - getInteger: "int: 0"
User root node, true - getLong: "long: 0"
User root node, true - get: "String: true"
User root node, true - getBoolean: "boolean: true"
User root node, true - getByteArray: "byte[]: b6bb9e"
User root node, true - getDouble: "doubleToLongBits: 0"
User root node, true - getFloat: "floatToIntBits: 0"
User root node, true - getInteger: "int: 0"
User root node, true - getLong: "long: 0"
User root node, sometext - get: "String: sometext"
User root node, sometext - getBoolean: "boolean: false"
User root node, sometext - getByteArray: "byte[]: b2899eb5ec6d"
User root node, sometext - getDouble: "doubleToLongBits: 0"
User root node, sometext - getFloat: "floatToIntBits: 0"
User root node, sometext - getInteger: "int: 0"
User root node, sometext - getLong: "long: 0"
User root node, 1.0 - get: "String: 1.0"
User root node, 1.0 - getBoolean: "boolean: false"
User root node, 1.0 - getByteArray: "byte[]: "
User root node, 1.0 - getDouble: "doubleToLongBits: 4607182418800017408"
User root node, 1.0 - getFloat: "floatToIntBits: 1065353216"
User root node, 1.0 - getInteger: "int: 0"
User root node, 1.0 - getLong: "long: 0"
User root node, Double.MIN_VALUE - get: "String: 4.9E-324"
User root node, Double.MIN_VALUE - getBoolean: "boolean: false"
User root node, Double.MIN_VALUE - getByteArray: "byte[]: "
User root node, Double.MIN_VALUE - getDouble: "doubleToLongBits: 1"
User root node, Double.MIN_VALUE - getFloat: "floatToIntBits: 0"
User root node, Double.MIN_VALUE - getInteger: "int: 0"
User root node, Double.MIN_VALUE - getLong: "long: 0"
User root node, Float.MIN_VALUE - get: "String: 1.4E-45"
User root node, Float.MIN_VALUE - getBoolean: "boolean: false"
User root node, Float.MIN_VALUE - getByteArray: "byte[]: "
User root node, Float.MIN_VALUE - getDouble: "doubleToLongBits: 3936137728114922858"
User root node, Float.MIN_VALUE - getFloat: "floatToIntBits: 1"
User root node, Float.MIN_VALUE - getInteger: "int: 0"
User root node, Float.MIN_VALUE - getLong: "long: 0"
User root node, 1 - get: "String: 1"
User root node, 1 - getBoolean: "boolean: false"
User root node, 1 - getByteArray: "byte[]: "
User root node, 1 - getDouble: "doubleToLongBits: 4607182418800017408"
User root node, 1 - getFloat: "floatToIntBits: 1065353216"
User root node, 1 - getInteger: "int: 1"
User root node, 1 - getLong: "long: 1"
User root node, Integer.MIN_VALUE - get: "String: -2147483648"
User root node, Integer.MIN_VALUE - getBoolean: "boolean: false"
User root node, Integer.MIN_VALUE - getByteArray: "byte[]: "
User root node, Integer.MIN_VALUE - getDouble: "doubleToLongBits: -4476578029606273024"
User root node, Integer.MIN_VALUE - getFloat: "floatToIntBits: -822083584"
User root node, Integer.MIN_VALUE - getInteger: "int: -2147483648"
User root node, Integer.MIN_VALUE - getLong: "long: -2147483648"
User root node, Long.MIN_VALUE - get: "String: -9223372036854775808"
User root node, Long.MIN_VALUE - getBoolean: "boolean: false"
User root node, Long.MIN_VALUE - getByteArray: "byte[]: "
User root node, Long.MIN_VALUE - getDouble: "doubleToLongBits: -4332462841530417152"
User root node, Long.MIN_VALUE - getFloat: "floatToIntBits: -553648128"
User root node, Long.MIN_VALUE - getInteger: "int: 0"
User root node, Long.MIN_VALUE - getLong: "long: -9223372036854775808"
User root node - clear: "ok"
User root node - put: "String: somevalue"
User root node - put: "String: someothervalue"
[req name="prefs.keys"/]
User root node - keys: "{ somekey, someotherkey }"
User root node - Absolute path: "/"
User root node - Children: "{  }"
User root node - get: "String: (empty)"
User root node - getBoolean: "boolean: false"
User root node - getByteArray: "byte[]: "
User root node - getDouble: "doubleToLongBits: 0"
User root node - getFloat: "floatToIntBits: 0"
User root node - getInteger: "int: 0"
User root node - getLong: "long: 0"
User root node - keys: "{ somekey, someotherkey }"
User root node - name: ""
User root node - nodeExists: "true"
User root node - nodeExists: "true"
User root node - parent: "null"
[req name="prefs.remove"/]
User root node - remove: "somekey == null"
User root node - Absolute path: "/"
User root node - Children: "{  }"
User root node - get: "String: (empty)"
User root node - getBoolean: "boolean: false"
User root node - getByteArray: "byte[]: "
User root node - getDouble: "doubleToLongBits: 0"
User root node - getFloat: "floatToIntBits: 0"
User root node - getInteger: "int: 0"
User root node - getLong: "long: 0"
User root node - keys: "{ someotherkey }"
User root node - name: ""
User root node - nodeExists: "true"
User root node - nodeExists: "true"
User root node - parent: "null"
[req name="prefs.clear"/]
User root node - clear: "ok"
User root node - Absolute path: "/"
User root node - Children: "{  }"
User root node - get: "String: (empty)"
User root node - getBoolean: "boolean: false"
User root node - getByteArray: "byte[]: "
User root node - getDouble: "doubleToLongBits: 0"
User root node - getFloat: "floatToIntBits: 0"
User root node - getInteger: "int: 0"
User root node - getLong: "long: 0"
User root node - keys: "{  }"
User root node - name: ""
User root node - nodeExists: "true"
User root node - nodeExists: "true"
User root node - parent: "null"
[req name="prefs.node"/]
User root node - Creating node: "/child1"
[req name="prefs.node"/]
User root node - Creating node: "/child2"
[req name="prefs.node"/]
User root node - Creating node: "/child3"
[req name="prefs.nodeExists"/]
User root node - nodeExists: "true"
User root node - nodeExists: "true"
[req name="prefs.childrenNames"/]
User root node - Children: "{ child1, child2, child3 }"
User root node - Absolute path: "/"
User root node - Children: "{ child1, child2, child3 }"
User root node - get: "String: (empty)"
User root node - getBoolean: "boolean: false"
User root node - getByteArray: "byte[]: "
User root node - getDouble: "doubleToLongBits: 0"
User root node - getFloat: "floatToIntBits: 0"
User root node - getInteger: "int: 0"
User root node - getLong: "long: 0"
User root node - keys: "{  }"
User root node - name: ""
User root node - nodeExists: "true"
User root node - nodeExists: "true"
User root node - parent: "null"
[req name="prefs.removeNode"/]
User root node - Removing node: "/"
User root node - Absolute path: "/"
User root node - Children: "java.lang.IllegalStateException"
User root node - get: "java.lang.IllegalStateException"
User root node - getBoolean: "java.lang.IllegalStateException"
User root node - getByteArray: "java.lang.IllegalStateException"
User root node - getDouble: "java.lang.IllegalStateException"
User root node - getFloat: "java.lang.IllegalStateException"
User root node - getInteger: "java.lang.IllegalStateException"
User root node - getLong: "java.lang.IllegalStateException"
User root node - keys: "java.lang.IllegalStateException"
User root node - name: ""
User root node - nodeExists: "false"
User root node - nodeExists: "java.lang.IllegalStateException"
User root node - parent: "java.lang.IllegalStateException"
[/method>

[method name="testUserNode"]
[req name="prefs.flush"/]
User node - flush: "/somenode/anothernode"
[req name="prefs.sync"/]
User node - sync: "/somenode/anothernode"
[req name="prefs.absolutePath"/]
User node - Absolute path: "/somenode/anothernode"
[req name="prefs.nodeExists"/]
User node - nodeExists: "true"
User node - nodeExists: "true"
[req name="prefs.name"/]
User node - name: "anothernode"
[req name="prefs.unusualnames"/]
User node - names: "/.././_?/\"
User node - names: "/ / / / "
User node - names: "/somenode/anothernode/.././_?/\"
User node - names: "/somenode/anothernode/ / / / "
[req name="prefs.illegalnames"/]
User node - names: "java.lang.IllegalArgumentException"
User node - names: "java.lang.IllegalArgumentException"
User node - names: "java.lang.IllegalArgumentException"
User node - names: "java.lang.IllegalArgumentException"
[req name="prefs.casesensitivity"/]
User node - Case sensitivity in keys: "lowercase"
User node - Case sensitivity in names: "false"
User node - clear: "ok"
[req name="prefs.get"/]
User node - get: "String: (empty)"
[req name="prefs.getBoolean"/]
User node - getBoolean: "boolean: false"
[req name="prefs.getByteArray"/]
User node - getByteArray: "byte[]: "
[req name="prefs.getDouble"/]
User node - getDouble: "doubleToLongBits: 0"
[req name="prefs.getFloat"/]
User node - getFloat: "floatToIntBits: 0"
[req name="prefs.getInteger"/]
User node - getInteger: "int: 0"
[req name="prefs.getLong"/]
User node - getLong: "long: 0"
[req name="prefs.get"/]
User node - get: "java.lang.NullPointerException"
[req name="prefs.getBoolean"/]
User node - getBoolean: "java.lang.NullPointerException"
[req name="prefs.getByteArray"/]
User node - getByteArray: "java.lang.NullPointerException"
[req name="prefs.getDouble"/]
User node - getDouble: "java.lang.NullPointerException"
[req name="prefs.getFloat"/]
User node - getFloat: "java.lang.NullPointerException"
[req name="prefs.getInteger"/]
User node - getInteger: "java.lang.NullPointerException"
[req name="prefs.getLong"/]
User node - getLong: "java.lang.NullPointerException"
[req name="prefs.get"/]
User node - get: "String: null"
[req name="prefs.getByteArray"/]
User node - getByteArray: "byte[]: null"
[req name="prefs.put"/]
User node - put: "String: (empty)"
[req name="prefs.putBoolean"/]
User node - putBoolean: "boolean: false"
[req name="prefs.putByteArray"/]
User node - putByteArray: "byte[]: "
[req name="prefs.putDouble"/]
User node - putDouble: "doubleToLongBits: 0"
[req name="prefs.putFloat"/]
User node - putFloat: "floatToIntBits: 0"
[req name="prefs.putInteger"/]
User node - putInteger: "int: 0"
[req name="prefs.putLong"/]
User node - putLong: "long: 0"
[req name="prefs.put"/]
User node - put: "java.lang.NullPointerException"
[req name="prefs.putBoolean"/]
User node - putBoolean: "java.lang.NullPointerException"
[req name="prefs.putByteArray"/]
User node - putByteArray: "java.lang.NullPointerException"
[req name="prefs.putDouble"/]
User node - putDouble: "java.lang.NullPointerException"
[req name="prefs.putFloat"/]
User node - putFloat: "java.lang.NullPointerException"
[req name="prefs.putInteger"/]
User node - putInteger: "java.lang.NullPointerException"
[req name="prefs.putLong"/]
User node - putLong: "java.lang.NullPointerException"
[req name="prefs.put"/]
User node - put: "java.lang.NullPointerException"
[req name="prefs.putByteArray"/]
User node - putByteArray: "java.lang.NullPointerException"
User node - clear: "ok"
[req name="prefs.propvalues"/]
User node, default - get: "String: (empty)"
User node, default - getBoolean: "boolean: false"
User node, default - getByteArray: "byte[]: "
User node, default - getDouble: "doubleToLongBits: 0"
User node, default - getFloat: "floatToIntBits: 0"
User node, default - getInteger: "int: 0"
User node, default - getLong: "long: 0"
User node, aString - get: "String: astring"
User node, aString - getBoolean: "boolean: false"
User node, aString - getByteArray: "byte[]: "
User node, aString - getDouble: "doubleToLongBits: 0"
User node, aString - getFloat: "floatToIntBits: 0"
User node, aString - getInteger: "int: 0"
User node, aString - getLong: "long: 0"
User node, true - get: "String: true"
User node, true - getBoolean: "boolean: true"
User node, true - getByteArray: "byte[]: b6bb9e"
User node, true - getDouble: "doubleToLongBits: 0"
User node, true - getFloat: "floatToIntBits: 0"
User node, true - getInteger: "int: 0"
User node, true - getLong: "long: 0"
User node, true - get: "String: true"
User node, true - getBoolean: "boolean: true"
User node, true - getByteArray: "byte[]: b6bb9e"
User node, true - getDouble: "doubleToLongBits: 0"
User node, true - getFloat: "floatToIntBits: 0"
User node, true - getInteger: "int: 0"
User node, true - getLong: "long: 0"
User node, sometext - get: "String: sometext"
User node, sometext - getBoolean: "boolean: false"
User node, sometext - getByteArray: "byte[]: b2899eb5ec6d"
User node, sometext - getDouble: "doubleToLongBits: 0"
User node, sometext - getFloat: "floatToIntBits: 0"
User node, sometext - getInteger: "int: 0"
User node, sometext - getLong: "long: 0"
User node, 1.0 - get: "String: 1.0"
User node, 1.0 - getBoolean: "boolean: false"
User node, 1.0 - getByteArray: "byte[]: "
User node, 1.0 - getDouble: "doubleToLongBits: 4607182418800017408"
User node, 1.0 - getFloat: "floatToIntBits: 1065353216"
User node, 1.0 - getInteger: "int: 0"
User node, 1.0 - getLong: "long: 0"
User node, Double.MIN_VALUE - get: "String: 4.9E-324"
User node, Double.MIN_VALUE - getBoolean: "boolean: false"
User node, Double.MIN_VALUE - getByteArray: "byte[]: "
User node, Double.MIN_VALUE - getDouble: "doubleToLongBits: 1"
User node, Double.MIN_VALUE - getFloat: "floatToIntBits: 0"
User node, Double.MIN_VALUE - getInteger: "int: 0"
User node, Double.MIN_VALUE - getLong: "long: 0"
User node, Float.MIN_VALUE - get: "String: 1.4E-45"
User node, Float.MIN_VALUE - getBoolean: "boolean: false"
User node, Float.MIN_VALUE - getByteArray: "byte[]: "
User node, Float.MIN_VALUE - getDouble: "doubleToLongBits: 3936137728114922858"
User node, Float.MIN_VALUE - getFloat: "floatToIntBits: 1"
User node, Float.MIN_VALUE - getInteger: "int: 0"
User node, Float.MIN_VALUE - getLong: "long: 0"
User node, 1 - get: "String: 1"
User node, 1 - getBoolean: "boolean: false"
User node, 1 - getByteArray: "byte[]: "
User node, 1 - getDouble: "doubleToLongBits: 4607182418800017408"
User node, 1 - getFloat: "floatToIntBits: 1065353216"
User node, 1 - getInteger: "int: 1"
User node, 1 - getLong: "long: 1"
User node, Integer.MIN_VALUE - get: "String: -2147483648"
User node, Integer.MIN_VALUE - getBoolean: "boolean: false"
User node, Integer.MIN_VALUE - getByteArray: "byte[]: "
User node, Integer.MIN_VALUE - getDouble: "doubleToLongBits: -4476578029606273024"
User node, Integer.MIN_VALUE - getFloat: "floatToIntBits: -822083584"
User node, Integer.MIN_VALUE - getInteger: "int: -2147483648"
User node, Integer.MIN_VALUE - getLong: "long: -2147483648"
User node, Long.MIN_VALUE - get: "String: -9223372036854775808"
User node, Long.MIN_VALUE - getBoolean: "boolean: false"
User node, Long.MIN_VALUE - getByteArray: "byte[]: "
User node, Long.MIN_VALUE - getDouble: "doubleToLongBits: -4332462841530417152"
User node, Long.MIN_VALUE - getFloat: "floatToIntBits: -553648128"
User node, Long.MIN_VALUE - getInteger: "int: 0"
User node, Long.MIN_VALUE - getLong: "long: -9223372036854775808"
User node - clear: "ok"
User node - put: "String: somevalue"
User node - put: "String: someothervalue"
[req name="prefs.keys"/]
User node - keys: "{ somekey, someotherkey }"
User node - Absolute path: "/somenode/anothernode"
User node - Children: "{  }"
User node - get: "String: (empty)"
User node - getBoolean: "boolean: false"
User node - getByteArray: "byte[]: "
User node - getDouble: "doubleToLongBits: 0"
User node - getFloat: "floatToIntBits: 0"
User node - getInteger: "int: 0"
User node - getLong: "long: 0"
User node - keys: "{ somekey, someotherkey }"
User node - name: "anothernode"
User node - nodeExists: "true"
User node - nodeExists: "true"
User node - parent: "somenode"
[req name="prefs.remove"/]
User node - remove: "somekey == null"
User node - Absolute path: "/somenode/anothernode"
User node - Children: "{  }"
User node - get: "String: (empty)"
User node - getBoolean: "boolean: false"
User node - getByteArray: "byte[]: "
User node - getDouble: "doubleToLongBits: 0"
User node - getFloat: "floatToIntBits: 0"
User node - getInteger: "int: 0"
User node - getLong: "long: 0"
User node - keys: "{ someotherkey }"
User node - name: "anothernode"
User node - nodeExists: "true"
User node - nodeExists: "true"
User node - parent: "somenode"
[req name="prefs.clear"/]
User node - clear: "ok"
User node - Absolute path: "/somenode/anothernode"
User node - Children: "{  }"
User node - get: "String: (empty)"
User node - getBoolean: "boolean: false"
User node - getByteArray: "byte[]: "
User node - getDouble: "doubleToLongBits: 0"
User node - getFloat: "floatToIntBits: 0"
User node - getInteger: "int: 0"
User node - getLong: "long: 0"
User node - keys: "{  }"
User node - name: "anothernode"
User node - nodeExists: "true"
User node - nodeExists: "true"
User node - parent: "somenode"
[req name="prefs.node"/]
User node - Creating node: "/somenode/anothernode/child1"
[req name="prefs.node"/]
User node - Creating node: "/somenode/anothernode/child2"
[req name="prefs.node"/]
User node - Creating node: "/somenode/anothernode/child3"
[req name="prefs.nodeExists"/]
User node - nodeExists: "true"
User node - nodeExists: "true"
[req name="prefs.childrenNames"/]
User node - Children: "{ child1, child2, child3 }"
User node - Absolute path: "/somenode/anothernode"
User node - Children: "{ child1, child2, child3 }"
User node - get: "String: (empty)"
User node - getBoolean: "boolean: false"
User node - getByteArray: "byte[]: "
User node - getDouble: "doubleToLongBits: 0"
User node - getFloat: "floatToIntBits: 0"
User node - getInteger: "int: 0"
User node - getLong: "long: 0"
User node - keys: "{  }"
User node - name: "anothernode"
User node - nodeExists: "true"
User node - nodeExists: "true"
User node - parent: "somenode"
[req name="prefs.removeNode"/]
User node - Removing node: "/somenode/anothernode"
User node - Absolute path: "/somenode/anothernode"
User node - Children: "java.lang.IllegalStateException"
User node - get: "java.lang.IllegalStateException"
User node - getBoolean: "java.lang.IllegalStateException"
User node - getByteArray: "java.lang.IllegalStateException"
User node - getDouble: "java.lang.IllegalStateException"
User node - getFloat: "java.lang.IllegalStateException"
User node - getInteger: "java.lang.IllegalStateException"
User node - getLong: "java.lang.IllegalStateException"
User node - keys: "java.lang.IllegalStateException"
User node - name: "anothernode"
User node - nodeExists: "false"
User node - nodeExists: "java.lang.IllegalStateException"
User node - parent: "java.lang.IllegalStateException"
[/method>

[method name="testRemovedNode"]
[req name="prefs.flush"/]
Removed node - flush: "java.lang.IllegalStateException"
[req name="prefs.sync"/]
Removed node - sync: "java.lang.IllegalStateException"
[req name="prefs.absolutePath"/]
Removed node - Absolute path: "/removednode"
[req name="prefs.nodeExists"/]
Removed node - nodeExists: "false"
Removed node - nodeExists: "java.lang.IllegalStateException"
[req name="prefs.name"/]
Removed node - name: "removednode"
[req name="prefs.get"/]
Removed node - get: "java.lang.IllegalStateException"
[req name="prefs.getBoolean"/]
Removed node - getBoolean: "java.lang.IllegalStateException"
[req name="prefs.getByteArray"/]
Removed node - getByteArray: "java.lang.IllegalStateException"
[req name="prefs.getDouble"/]
Removed node - getDouble: "java.lang.IllegalStateException"
[req name="prefs.getFloat"/]
Removed node - getFloat: "java.lang.IllegalStateException"
[req name="prefs.getInteger"/]
Removed node - getInteger: "java.lang.IllegalStateException"
[req name="prefs.getLong"/]
Removed node - getLong: "java.lang.IllegalStateException"
[req name="prefs.put"/]
Removed node - put: "java.lang.IllegalStateException"
[req name="prefs.putBoolean"/]
Removed node - putBoolean: "java.lang.IllegalStateException"
[req name="prefs.putByteArray"/]
Removed node - putByteArray: "java.lang.IllegalStateException"
[req name="prefs.putDouble"/]
Removed node - putDouble: "java.lang.IllegalStateException"
[req name="prefs.putFloat"/]
Removed node - putFloat: "java.lang.IllegalStateException"
[req name="prefs.putInteger"/]
Removed node - putInteger: "java.lang.IllegalStateException"
[req name="prefs.putLong"/]
Removed node - putLong: "java.lang.IllegalStateException"
[req name="prefs.keys"/]
Removed node - keys: "java.lang.IllegalStateException"
[req name="prefs.remove"/]
Removed node - remove: "java.lang.IllegalStateException"
[req name="prefs.clear"/]
Removed node - clear: "java.lang.IllegalStateException"
[req name="prefs.node"/]
Removed node - Creating node: "java.lang.IllegalStateException"
[req name="prefs.nodeExists"/]
Removed node - nodeExists: "java.lang.IllegalStateException"
Removed node - nodeExists: "java.lang.IllegalStateException"
[req name="prefs.childrenNames"/]
Removed node - Children: "java.lang.IllegalStateException"
[req name="prefs.removeNode"/]
Removed node - Removing node: "java.lang.IllegalStateException"
[/method>

[method name="testRemovedAncestor"]
[req name="prefs.flush"/]
Removed ancestor - flush: "java.lang.IllegalStateException"
[req name="prefs.sync"/]
Removed ancestor - sync: "java.lang.IllegalStateException"
[req name="prefs.absolutePath"/]
Removed ancestor - Absolute path: "/removedancestor/child/baby"
[req name="prefs.nodeExists"/]
Removed ancestor - nodeExists: "false"
Removed ancestor - nodeExists: "java.lang.IllegalStateException"
[req name="prefs.name"/]
Removed ancestor - name: "baby"
[req name="prefs.get"/]
Removed ancestor - get: "java.lang.IllegalStateException"
[req name="prefs.getBoolean"/]
Removed ancestor - getBoolean: "java.lang.IllegalStateException"
[req name="prefs.getByteArray"/]
Removed ancestor - getByteArray: "java.lang.IllegalStateException"
[req name="prefs.getDouble"/]
Removed ancestor - getDouble: "java.lang.IllegalStateException"
[req name="prefs.getFloat"/]
Removed ancestor - getFloat: "java.lang.IllegalStateException"
[req name="prefs.getInteger"/]
Removed ancestor - getInteger: "java.lang.IllegalStateException"
[req name="prefs.getLong"/]
Removed ancestor - getLong: "java.lang.IllegalStateException"
[req name="prefs.put"/]
Removed ancestor - put: "java.lang.IllegalStateException"
[req name="prefs.putBoolean"/]
Removed ancestor - putBoolean: "java.lang.IllegalStateException"
[req name="prefs.putByteArray"/]
Removed ancestor - putByteArray: "java.lang.IllegalStateException"
[req name="prefs.putDouble"/]
Removed ancestor - putDouble: "java.lang.IllegalStateException"
[req name="prefs.putFloat"/]
Removed ancestor - putFloat: "java.lang.IllegalStateException"
[req name="prefs.putInteger"/]
Removed ancestor - putInteger: "java.lang.IllegalStateException"
[req name="prefs.putLong"/]
Removed ancestor - putLong: "java.lang.IllegalStateException"
[req name="prefs.keys"/]
Removed ancestor - keys: "java.lang.IllegalStateException"
[req name="prefs.remove"/]
Removed ancestor - remove: "java.lang.IllegalStateException"
[req name="prefs.clear"/]
Removed ancestor - clear: "java.lang.IllegalStateException"
[req name="prefs.node"/]
Removed ancestor - Creating node: "java.lang.IllegalStateException"
[req name="prefs.nodeExists"/]
Removed ancestor - nodeExists: "java.lang.IllegalStateException"
Removed ancestor - nodeExists: "java.lang.IllegalStateException"
[req name="prefs.childrenNames"/]
Removed ancestor - Children: "java.lang.IllegalStateException"
[req name="prefs.removeNode"/]
Removed ancestor - Removing node: "java.lang.IllegalStateException"
[/method>
