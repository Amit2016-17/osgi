package org.osgi.dmt.residential;

import org.osgi.dmt.ddf.*;
import org.osgi.dmt.residential.Filter;
import org.osgi.dmt.service.log.*;

/**
 * The $ describes the root node for OSGi management. The path to this node is
 * defined in the system property: {@code org.osgi.residential.root}.
 */
public interface $ {
	/**
	 * The Filters node searches the nodes in a tree that correspond to a target
	 * URI and an optional filter expression. A new {@link Filter} is created by
	 * adding a node to the Filters node. The name of the node is chosen by the
	 * remote manager. If multiple managers are active they must agree on a
	 * scheme to avoid conflicts or an atomic sessions must be used to claim
	 * exclusiveness.
	 * <p>
	 * Filter nodes are persistent, it is the responsibility of the management
	 * system to clean them up.
	 * 
	 * @remark Or should the nodes be emptied when the framework restarts? Seems
	 *         safer
	 * 
	 * @return The Filters Node
	 */
	Opt<MutableMAP<String, Filter>> Filters();

	/**
	 * The Framework node used to manage the local framework.
	 * 
	 * @return Framework node
	 */
	@NodeType("org.osgi/1.0/Framework")
	Framework Framework();

	/**
	 * Access to the optional Log. The key of the MAP is a unique identifier for
	 * the Log request that must be generated by the initiator. This Log request
	 * must then filled and after which the result can be obtained. See
	 * {@link Log}.
	 * 
	 * @return The value for the optional Log node
	 */

	Opt<Log> Log();

}
