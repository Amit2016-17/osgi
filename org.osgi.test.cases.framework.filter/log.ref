#----- framework.filter.m1
Testing null filter: "6 services: { ServiceA 1.0, ServiceB 1.0, ServiceB 2.0, ServiceC 1.0, ServiceC 2.0, ServiceC 2.5 }"
#----- framework.filter.m2
Testing invalid syntax: "Exception thrown, Ok."
#----- framework.filter.m3
Testing case insensitive: "1 services: { ServiceA 1.0 }"
#----- framework.filter.m4
Testing spaces in filter operation: "3 services: { ServiceA 1.0, ServiceB 1.0, ServiceB 2.0 }"
#----- framework.filter.m5
Testing type String: "1 services: { ServiceA 1.0 }"
#----- framework.filter.m6
Testing type Integer: "1 services: { ServiceC 2.5 }"
Testing type Long: "1 services: { ServiceC 2.5 }"
Testing type Byte: "1 services: { ServiceC 2.5 }"
Testing type Short: "1 services: { ServiceC 2.5 }"
#----- framework.filter.m9
Testing array filter: "1 services: { ServiceC 2.0 }"
#----- framework.filter.m10
Testing Vector filter: "1 services: { ServiceC 2.5 }"
#----- framework.filter.s1
Testing approximate equality (case): "1 services: { ServiceA 1.0 }"
Testing approximate equality (white space): "1 services: { ServiceA 1.0 }"



