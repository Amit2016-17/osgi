name: CI Build

on:
  push:
    paths-ignore:
    - 'README.md'
    - 'CONTRIBUTING.md'
    - 'LICENSE'
  pull_request:
    paths-ignore:
    - 'README.md'
    - 'CONTRIBUTING.md'
    - 'LICENSE'

env:
  LC_ALL: en_US.UTF-8
  GRADLE_OPTS: -Dorg.gradle.parallel=false

defaults:
  run:
    shell: bash

jobs:
  JDK8_Linux:
    name: JDK8 ubuntu-latest
    runs-on: ubuntu-latest
    steps:
    - name: Git Checkout
      uses: actions/checkout@v2
    - name: Git Unshallow
      if: (github.repository == 'osgi/osgi') && (github.event_name != 'pull_request')
      run: |
        git fetch --prune --unshallow
        git describe --dirty --always --abbrev=9
    - name: Gradle Wrapper Validation
      uses: gradle/wrapper-validation-action@v1
    - name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: 8
        server-id: https://oss.sonatype.org
        server-username: OSSRH_USERNAME
        server-password: OSSRH_PASSWORD
    - name: Build
      id: build
      run: |
        ./.github/scripts/build.sh
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
    - name: Publish Specification HTML  
      if: (github.repository == 'osgi/osgi') && (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request')
      uses: peaceiris/actions-gh-pages@v3
      with:
        deploy_key: ${{ secrets.DRAFT_DEPLOY_KEY }}
        external_repository: osgi/draft
        publish_branch: gh-pages
        publish_dir: osgi.specs/generated/html
        force_orphan: true
    - name: Upload Specification HTML
      if: (github.repository == 'osgi/osgi')
      uses: actions/upload-artifact@v2
      with:
        name: OSGi-Specification-HTML
        path: osgi.specs/generated/html/
    - name: Upload Specification PDF
      if: (github.repository == 'osgi/osgi')
      uses: actions/upload-artifact@v2
      with:
        name: OSGi-Specification-PDF
        path: osgi.specs/generated/*.pdf
    - name: Upload Generated Repo
      if: (github.repository == 'osgi/osgi')
      uses: actions/upload-artifact@v2
      with:
        name: OSGi-Generated-Repo
        path: cnf/generated/repo/
    - name: Core CT
      id: ct_core
      if: (steps.build.conclusion == 'success')
      run: |
        ./.github/scripts/ct.sh ct.core
