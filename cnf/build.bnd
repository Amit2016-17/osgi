# Very general
project.dependson       = ${p-dependson;:}
project.bootclasspath   = ${p-bootclasspath;:}
project.buildpath       = ${p-buildpath;:}
project.sourcepath      = ${p-sourcepath;:}
project.allsourcepath   = ${p-allsourcepath;:}
project.output          = ${p-output}
project.testpath        = ${p-testpath;:}
project.workspace		= ${workspace}
project.dir				= ${project}

-verbose				= true
verbose					= false
src                     = src
bin                     = bin
target-dir				= generated
target					= ${project}/${target-dir}
build					= ${workspace}/cnf
licensed				= ${workspace}/licensed
repo					= ${build}/repo
licensed-repo			= ${licensed}/repo
project.name            = ${basename;${project}}
p			            = ${project.name}
prebuild				= 

# Java compiler options
java 					= java
javac 					= javac
javac.debug				= on
javac.source 			= 1.3
javac.target 			= 1.2


#Bnd options
-sources               	= true
-sourcepath             = ${project}/${src}

-plugin = aQute.lib.deployer.FileRepo; \
            name='Main'; \
            location="${repo}"; \
            readonly=true, \
          aQute.lib.deployer.FileRepo; \
            name='Licensed'; \
            location="${licensed-repo}"; \
            readonly=true, \
          aQute.bnd.signing.JartoolSigner; \
            keystore="${build}/keystore"; \
            keypass=testtest; \
            storepass=testtest, \
          Packaging; \
            path:="${build}/${bin}"; \
            command:=-pack, \
          CTPackaging; \
            path:="${build}/${bin}"; \
            command:=-ctpack, \
          SignatureTest; \
            path:="${build}/${bin}"; \
            command:="-signaturetest"


-make                   =  \
  (*).(jar);                             type=bnd;  recipe="bnd/$1.bnd"


# Time options
# base.modified is used by bnd to not make when files are not changed
base.modified			= ${fmodified;${build}/build.bnd,${project}/bnd.bnd,${project}/build.gradle}
base.modified.readable	= ${long2date;${base.modified}}
project.build			= ${tstamp;yyyyMMddHHmm}

copyright.year = ${tstamp;yyyy}
copyright = Copyright (c) OSGi Alliance (2000, ${copyright.year}). All Rights Reserved.
copyright.html = Copyright &copy; OSGi Alliance (2000, ${copyright.year}). All Rights Reserved.

osgi.release				= 6
osgi.version.major			= ${osgi.release}
osgi.version.minor			= 0
osgi.version.micro			= 0
osgi.version				= ${osgi.version.major}.${osgi.version.minor}.${osgi.version.micro}

build.version				= ${osgi.version}.${project.build}

ee.j2se-15.jar = ${repo;ee.j2se;1.5;lowest}

# Documentation
Bundle-Copyright: ${copyright}
Bundle-Vendor:    OSGi Alliance http://www.osgi.org/
Bundle-Version:   ${build.version}
Bundle-DocURL:    http://www.osgi.org/
Bundle-SCM:       url=https://osgi.org/git/build.git, \
                  connection=scm:git:https://osgi.org/git/build.git, \
                  developerConnection=scm:git:https://osgi.org/git/build.git
Bundle-Developers: osgi; email=info@osgi.org; name="OSGi Alliance"; organization="OSGi Alliance"
groupid: org.osgi
Git-Descriptor:   ${system-allow-fail;git describe --dirty --always}
Git-SHA:          ${system-allow-fail;git rev-list -1 HEAD}

-removeheaders			= Include-Resource, Private-Package, Conditional-Package

junit.package			= junit.framework;version=3.8
junit					= com.springsource.junit;version=3.8;export="${junit.package}"

-runpath							= \
	org.osgi.impl.framework;		version=latest

-runtrace=true
runproperties = report=true
runsecureproperties = ${runproperties}, \
	org.osgi.framework.security=osgi, \
	org.osgi.framework.trust.repositories=${build}/keystore

-runproperties = ${runproperties}

testcases = ${sort;${classes;extending;junit.framework.TestCase;concrete}}


