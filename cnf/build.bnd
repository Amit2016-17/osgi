# Very general
project.dependson       = ${p-dependson;:}
project.bootclasspath   = ${p-bootclasspath;:}
project.buildpath       = ${p-buildpath;:}
project.sourcepath      = ${p-sourcepath;:}
project.allsourcepath   = ${p-allsourcepath;:}
project.output          = ${p-output}
project.testpath        = ${p-testpath;:}
project.workspace		= ${workspace}
project.dir				= ${project}

-verbose				= true
verbose					= false
src                     = src
bin                     = bin
target-dir				= generated
target					= ${project}/${target-dir}
build					= ${workspace}/cnf
licensed				= ${workspace}/licensed
project.name            = ${basename;${project}}
p			            = ${project.name}
prebuild				= 

# Java compiler options
java 					= java
javac 					= javac
javac.debug				= on
javac.source 			= 1.8
javac.target 			= 1.8
javac.profile           = compact1
-eeprofile              = auto

#Bnd options
-sources               	= true
-sourcepath             = ${project}/${src}

# Include the gradle.properties to get the values of bnd_* which are used
# for the bnd build repository.
-include ${workspace}/gradle.properties

mainrepo                = ${build}/repo
centralrepo             = https://repo.maven.apache.org/maven2
licensedrepo            = ${licensed}/repo
releaserepo             = ${build}/${target-dir}/repo

-plugin = aQute.lib.deployer.FileRepo; \
            name='Main'; \
            location="${mainrepo}"; \
            readonly=true, \
          aQute.lib.deployer.FileRepo; \
            name='Licensed'; \
            location="${licensedrepo}"; \
            readonly=true, \
          aQute.bnd.repository.maven.provider.MavenBndRepository;\
            name='Maven Central';\
            releaseUrl="${centralrepo}";\
            snapshotUrl="${uri;${bnd_snapshots}}";\
            index=${.}/central.mvn;\
            readOnly=true,\
          aQute.bnd.repository.maven.provider.MavenBndRepository;\
            name='SpringSource EBR';\
            releaseUrl="http://repository.springsource.com/maven/bundles/external";\
            index=${.}/springsource.mvn;\
            readOnly=true,\
          aQute.bnd.repository.maven.provider.MavenBndRepository;\
            name='Apache Snapshots';\
            snapshotUrl="https://repository.apache.org/content/repositories/snapshots/";\
            index=${.}/apache-snapshots.mvn;\
            readOnly=true,\
          aQute.bnd.repository.maven.provider.MavenBndRepository;\
            name='Local';\
            noupdateOnRelease=true,\
          aQute.bnd.repository.maven.provider.MavenBndRepository;\
            name='Release';\
            releaseUrl="${fileuri;${releaserepo}}";\
            snapshotUrl="${fileuri;${releaserepo}}";\
            noupdateOnRelease=true,\
          aQute.bnd.repository.maven.provider.MavenBndRepository;\
           name='Baseline';\
           releaseUrl="${centralrepo}";\
           index=${.}/baseline.mvn;\
           readOnly=true,\
          aQute.bnd.signing.JartoolSigner; \
            keystore="${build}/keystore"; \
            keypass=testtest; \
            storepass=testtest; \
            digestalg=SHA-1, \
          Packaging; \
            path:="${build}/${bin}"; \
            command:=-pack, \
          CTPackaging; \
            path:="${build}/${bin}"; \
            command:=-ctpack, \
          SignatureTest; \
            path:="${build}/${bin}"; \
            command:="-signaturetest"

-plugin.osgi.nexus: \
    aQute.bnd.repository.maven.provider.MavenBndRepository; \
        snapshotUrl="https://oss.sonatype.org/content/repositories/snapshots/"; \
        releaseUrl="https://oss.sonatype.org/service/local/staging/deploy/maven2/"; \
        index=${.}/osgi-nexus.mvn; \
        name='OSGiNexus'

-releaserepo:
-baselinerepo: Baseline
-maven-release: javadoc;path=${target}/docs/javadoc

-make                   =  \
  (*).(jar);                             type=bnd;  recipe="bnd/$1.bnd"

-workingset = \
  Build;member=${filter;${p};cnf|licensed|osgi\\..*}, \
  Companion;member=${filterout;${p};cnf|licensed|osgi\\..*|org\\.osgi\\.(impl|test)\\..*}, \
  ReferenceImplementation;member=${filter;${p};org\\.osgi\\.impl\\..*}, \
  ComplianceTests;member=${filter;${p};org\\.osgi\\.test\\..*}
  
# Time options
# base.modified is used by bnd to not make when files are not changed
base.modified			= ${fmodified;${build}/build.bnd,${project}/bnd.bnd,${project}/build.gradle}
base.modified.readable	= ${long2date;${base.modified}}
project.build			= ${tstamp;yyyyMMddHHmm}

copyright.year = ${tstamp;yyyy}
copyright = Copyright (c) OSGi Alliance (2000, ${copyright.year}). All Rights Reserved.
copyright.html = Copyright &copy; OSGi Alliance (2000, ${copyright.year}). All Rights Reserved.

osgi.release				= 8
osgi.version.major			= ${osgi.release}
osgi.version.minor			= 0
osgi.version.micro			= 0
osgi.version				= ${osgi.version.major}.${osgi.version.minor}.${osgi.version.micro}

build.version				= ${osgi.version}.${project.build}

# Documentation
-groupid: org.osgi
Bundle-Copyright: ${copyright}
Bundle-Vendor:    OSGi Alliance https://www.osgi.org/
# Uncomment the following line to build the non-snapshot version.
#-snapshot:
Bundle-Version:   ${build.version}-SNAPSHOT
Bundle-DocURL:    https://www.osgi.org/
Git-Descriptor:   ${system-allow-fail;git describe --dirty --always --abbrev=9}
Git-SHA:          ${system-allow-fail;git rev-list -1 --no-abbrev-commit HEAD}
Bundle-SCM:       url=https://osgi.org/gitweb/build.git, \
                  connection=scm:git:https://osgi.org/git/build.git, \
                  developerConnection=scm:git:https://osgi.org/git/build.git, \
                  tag=${Git-Descriptor}
Bundle-Developers: osgi; \
                  email=info@osgi.org; \
                  name="OSGi Alliance"; \
                  organization="OSGi Alliance"; \
                  organizationUrl=https://www.osgi.org/

-reproducible: true
-noextraheaders: true
-removeheaders			= Include-Resource, Private-Package, Conditional-Package

junit4: biz.aQute.junit;version=latest
tester: biz.aQute.tester;version=latest
junit.tester: biz.aQute.junit;version=latest
-tester: ${tester}

-runfw = org.osgi.impl.framework; version=latest

-runtrace=true
runproperties = report=true, \
 equinox.use.ds=true
runsecureproperties = ${runproperties}, \
	org.osgi.framework.security=osgi, \
	org.osgi.framework.trust.repositories=${build}/keystore

-runproperties = ${runproperties}

testcases.junit3 = ${classes;EXTENDS;junit.framework.TestCase;CONCRETE}
testcases.junit4 = ${classes;HIERARCHY_ANNOTATED;org.junit.Test;CONCRETE}
testcases.junit5 = \
 ${classes;HIERARCHY_INDIRECTLY_ANNOTATED;org.junit.jupiter.api.Test;CONCRETE},\
 ${classes;HIERARCHY_INDIRECTLY_ANNOTATED;org.junit.jupiter.api.RepeatedTest;CONCRETE},\
 ${classes;HIERARCHY_INDIRECTLY_ANNOTATED;org.junit.jupiter.params.ParameterizedTest;CONCRETE},\
 ${classes;HIERARCHY_INDIRECTLY_ANNOTATED;org.junit.jupiter.api.TestFactory;CONCRETE},\
 ${classes;HIERARCHY_INDIRECTLY_ANNOTATED;org.junit.jupiter.api.TestTemplate;CONCRETE}

testcases = ${sort;${uniq;${testcases.junit3};${testcases.junit4};${testcases.junit5}}}


