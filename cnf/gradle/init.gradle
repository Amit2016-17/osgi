/* 
 * Master Gradle initialization script
 *
 * Called by settings.gradle to initialize the project set.
 *
 * Depends on bnd_* values from gradle.properties.
 */

import aQute.bnd.build.Workspace

/* Add bnd as a script dependency */
buildscript {
  dependencies {
    classpath files(new File(rootDir, bnd_jar))
  }
}

/* Initialize the bnd workspace */
def workspace = Workspace.getWorkspace(rootDir, bnd_cnf)
if (workspace == null) {
  throw new GradleException("Unable to load workspace ${rootDir}/${bnd_cnf}")
}

/* Delay run dependency evaluations since they may not yet be built */
workspace.allProjects.each {
  it.setDelayRunDependencies(true)
}

/* Add cnf project to the graph */
def cnf = getBndProject(workspace, bnd_cnf)
include cnf.name

/* Start with the declared build project name */
def projectName = bnd_build

/* If in a subproject, use the subproject name */
for (def currentDir = startParameter.currentDir; currentDir != rootDir; currentDir = currentDir.parentFile) {
  projectName = currentDir.name
}

/* Add the project and its dependencies to the graph */
def project = getBndProject(workspace, projectName)
include project.name
project.dependson.each {
  include it.name
}

/* Get the bnd project for the specified project name */
def getBndProject(Workspace workspace, String projectName) {
  def project = workspace.getProject(projectName)
  if (project == null) {
    throw new GradleException("Unable to load project from ${rootDir}/${projectName}")
  }
  project.prepare()
  if (project.isValid()) {
    return project
  }

  def errorCount = 0
  project.warnings.each {
    println "Warning: ${it}"
  }
  project.errors.each {
    println "Error  : ${it}"
    errorCount++
  }
  if (!project.isOk()) {
    def str = 'even though no errors were reported'
    if (errorCount == 1) {
      str = 'one error was reported'
    } else if (errorCount > 1) {
      str = "${errorCount} errors were reported"
    }
    throw new GradleException("Project ${rootDir}/${projectName} is invalid, ${str}")
  }
  throw new GradleException("Project ${rootDir}/${projectName} is not a valid bnd project")
}

/* After the rootProject is created, set up some properties. */
gradle.rootProject { rootProject ->
  rootProject.ext.bndWorkspace = workspace
  rootProject.ext.cnf = rootProject.project(cnf.name)
}
