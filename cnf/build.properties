# Default build properties.
# These properties can be overridden by setting them in either
# 1) the project's build.properties file
# 2) the user's osgi.properties file (in user's home dir)

# Default Java options
java = java
javac = javac
javac.debug = on
javac.source = 1.3
javac.target = 1.2

# We follow the PDE build.properties conventions. This means
# that the following properties should be set:
#
#  bin.includes        jars/files copied to osgi.released
bin.includes = ${project.name}.jar
#
#  jars.compile.order  list of comma separated JAR files. As the name
#                      implies, ant will build the jars in that order
#
# For each mentioned jar file in the jars.compile.order
# property, the following option may be used in the
# form <option>.<jarfile>
#
#  expand.<jarfile>    List of comma separated package names,
#                      like org.osgi.service.example, javax.microedition, ...
#                      The package name maybe placed between square
#                      brackets, this means that the package is
#                      placed in the export list of the bundle which
#                      is placed in the manifest if $(EXPORT-PACKAGE)
#                      is present. E.g. [org.osgi.example] will be
#                      in the export list, otherwise it is assumed to be
#                      private. Pakage name that end in a .* will be
#                      recursively expanded. The packages are coming
#                      from the project classpath as specified in
#                      the Eclipse .classpath file.
#
#  include.<jarfile>   A comma separated list of file names that must be
#                      be included in the jar. The default name of the file
#                      in the jar will be the file name without the directory
#                      name. This can be overridden by using a = sign in the
#                      name. I.e. tbc.jar=tc1/tbc/org.osgi.tc1.jar
#
#  source.<jarfile>    A comma separated list of directories. The contents
#                      of these directories are included (not recursively).
#                      If the path of the directory starts with an eclipse
#                      source directory, this prefix is removed and the
#                      remainder is used for the jar entry name. Otherwise the
#                      jar entry is the full path. This property is supported
#                      because the Eclipse build.properties editor supports
#                      it. However, expand seems easier to use.

# Default btool options
# silent       ignore lots of messages
# analyse      take a look at the manifest
# showmanifest display the manifest during the build
# noversion    ignore version of import/export

btool.silent = true
btool.analyse = true
btool.showmanifest = false
btool.noversion = false

# This can be overridden in the user's properties file for a more verbose
# build output.
verbose=false