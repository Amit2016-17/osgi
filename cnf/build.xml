<?xml version="1.0" encoding="UTF-8"?>
<project name="package" default="none">

	<dirname property="project" file="${ant.file}" />
	<dirname property="workspace" file="${project}" />

	<taskdef name="btool" classname="org.osgi.tools.btool.BTool" 
		classpath="../osgi.released/btool.jar" />
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="../cnf/ant-contrib/ant-contrib-0.6.jar"/>
	
	
	<property file="${project}/build.properties" />		
	<property file="${env.HOME}/osgi.properties" />
	<property file="${workspace}/cnf/build.properties" />
	<btool eclipse="${project}" />


	<!-- Defaults, these value will be valid if the build.properties file is not present -->
	<property name="bin.includes" value= "${project.name}.jar"/>
	<property name="jars.compile.order" value= "${project.name}.jar"/>
	<property name="expand.${project.name}.jar" value= "${project.name}"/>
	
	<property name="p" value= "${project.name}"/>
	

	<target name="publish" depends="check" unless="jar.ok">
		<antcall target="compile"/>
		<delete>
			<fileset dir="${project}" includes="${jars.compile.order}" />
		</delete>
		<foreach list="${jars.compile.order}" delimiter=" ," target="buildJar" param="item.jarFile" inheritAll="true"/>
		<foreach list="${bin.includes}" delimiter=" ," target="release" param="item.jarFile" inheritAll="true"/>
	</target>
	
	<target name="release">
		<echo>Release ${item.jarFile}</echo>
		<copy overwrite="true" todir="../osgi.released" file="${item.jarFile}" />
	</target>
	
	<target name="check">
		<uptodate property="jar.ok" targetfile="../cnf/${project.name}">
			<srcfiles dir="src" includes="**/*" />
			<srcfiles dir="../cnf" includes="build.xml" />
			<srcfiles dir="../cnf" includes="build.properties" />
			<srcfiles dir="." includes="*.mf" />
			<srcfiles dir="." includes="build.properties" />
			<srcfiles dir="." includes="build.xml" />
		</uptodate>
		<touch file="../cnf/cache/${project.name}" />
	</target>
		

	<target name="buildJar">
		<btool jar="${item.jarFile}" 
			eclipse="${project}" 
			analyse="${btool.analyse}" 
			showmanifest="true" 
			sources="${btool.sources}" 
			silent="${btool.silent}" 
			includeProperty="include.${item.jarFile}" 
			expandProperty="expand.${item.jarFile}" 
			contentFoldersProperty="source.${item.jarFile}" 
			excludeImportProperty="excludeImport.${item.jarFile}" 
			includeExportProperty="includeExport.${item.jarFile}" 
			ipaProperty="ipa.${item.jarFile}" 
			ignoreVersions="${btool.noversion}" />
	</target>

	<target name="compile" unless="eclipse.running">
		<javac fork="no" executable="${JAVA_HOME}/bin/javac" srcdir="${project.sourcepath}" destdir="${project.bindir}" classpath="${project.classpath}" bootclasspath="${project.bootclasspath}" deprecation="true" listfiles="true" target="${javac.target}" source="${javac.source}" />
	</target>

	<target name="clean">
		<delete>
			<fileset dir="${project.bindir}" includes="**/*.bak **/*.class" />
			<fileset dir="${project}" includes="**/*.bak **/~* ${jars.compile.order}" />
		</delete>
	</target>



	<target name="echo">
		<echo>BIN:  ${project.bindir}</echo>
		<echo>SRCE: ${project.sourcepath}</echo>
		<echo>BOOT: ${project.bootclasspath}</echo>
		<echo>CP:   ${project.classpath}</echo>
		<echo>NAME: ${project.name}</echo>
		<echo>VERS: ${project.version}</echo>
		<echo>CAT:  ${project.category}</echo>
	</target>

	<target name="none">
		<echo>NONE</echo>
	</target>
</project>
